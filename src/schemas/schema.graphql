enum Role {
  USER
  ADMIN
}

type CV  {
  id: Int!
  name: String!
  age: String!
  job: String!
  skills: [Skill!]
  user: User!
}

type Skill  {
  id: Int!
  designation: String!
  cvs: [CV!]
}

type User  {
  id: Int!
  name: String!
  email: String!
  role: Role!
  cvs: [CV]!
}

type Query {
  CVsFetch: [CV]!
  CVByID(id: Int!): CV
  SkillsFetch: [Skill]!
}

input CreateCVInput {
  name: String!
  age: String!
  job: String!
  skillIds: [Int]!
  userId: Int!
}

input UpdateCVInput {
  name: String
  age: String
  job: String
  skillIds: [Int]
  userId: Int
}

type Mutation {
  createCV(input: CreateCVInput!): CV
  updateCV(id: Int!, input: UpdateCVInput!): CV
  deleteCV(id: Int!): Boolean!
}


type Subscription {
  CVUpdates: CV!

}
